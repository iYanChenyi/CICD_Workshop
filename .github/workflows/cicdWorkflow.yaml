name: CICD_Worlflow
on:
    push:
        branches:
         - 'v[0-9]+.[0-9]'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            - name: Run Trivy vulnerability scanner in repo mode
              uses: aquasecurity/trivy-action@master
              with:
                scan-type: 'fs'
                ignore-unfixed: true
                format: 'sarif'
                output: 'trivy-results.sarif'
                severity: 'CRITICAL'
            
            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2
              env:
                SLACK_CHANNEL: general
                SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
                SLACK_ICON: https://github.com/rtCamp.png?size=48
                SLACK_MESSAGE: |
                                'Post Content :rocket:
                                name: YanChenyi
                                Matriculation number:A0287272W
                                Email:E1285218@u.nus.edu
                                GIT:https://github.com/iYanChenyi/CICD_Workshop.git
                                IMAGE:'
                SLACK_TITLE: Post Title
                SLACK_USERNAME: rtCamp
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

            - name: slack upload file
              uses: MeilCli/slack-upload-file@v3
              with:
                  slack_token: ${{ secrets.SLACK_TOKEN }}
                  channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
                  content: 'file content'
                  file_type: 'text'
                  file_name: 'text.txt'
                  title: 'title of file'
                  initial_comment: 'post by slack-upload-file'
            
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: yanchenyi/cicd_workshop:workshop_image
            
            - id: docker_meta
              uses: docker/metadata-action@v4.4.0
              with:
                  images: ghcr.io/sigstore/sample-honk
                  tags: type=sha,format=long
            
            - name: Build and Push container images
              uses: docker/build-push-action@v4.0.0
              id: build-and-push
              with:
                  platforms: linux/amd64,linux/arm/v7,linux/arm64
                  push: true
                  tags: ${{ steps.docker_meta.outputs.tags }}
            
                  # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
            - name: Sign image with a key
              run: |
                      cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
              env:
                  TAGS: ${{ steps.docker_meta.outputs.tags }}
                  COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
                  COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
                  DIGEST: ${{ steps.build-and-push.outputs.digest }}
            
                  